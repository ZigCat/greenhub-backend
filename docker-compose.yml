version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d greenhub"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: greenhub
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MONGO_INITDB_DATABASE: greenhub
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - backend


# Microservices

  eureka:
    build: ./service-registry
    image: greenhub-backend/service-registry:latest
    container_name: eureka
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB_HOST: postgres:5432
    ports:
      - "8761:8761"
    networks:
      - backend

  api-gateway:
    build: ./api-gateway
    image: greenhub-backend/api-gateway:latest
    container_name: api-gateway
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      eureka:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      GREENHUB_GATEWAY_AUTH: http://auth-provider:8081
      GREENHUB_GATEWAY_USER: http://user-provider:8082
      GREENHUB_GATEWAY_MAIN: http://article-provider:8083
    ports:
      - "8080:8080"
    networks:
      - backend
  
  auth-provider:
    build: ./auth-provider
    image: greenhub-backend/auth-provider:latest
    container_name: auth-provider
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      eureka:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB_HOST: postgres:5432
    ports:
      - "8081:8081"
    networks:
      - backend
  
  user-provider:
    build: ./user-provider
    image: greenhub-backend/user-provider:latest
    container_name: user-provider
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      auth-provider:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB_HOST: postgres:5432
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8082:8082"
    networks:
      - backend
  
  article-provider:
    build: ./article_provider
    image: greenhub-backend/article-provider:latest
    container_name: article-provider
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
      eureka:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB_HOST: postgres:5432
      MONGO_DB_HOST: mongo:27017
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8083:8083"
    networks:
      - backend

networks:
  backend:
    name: backend

volumes:
  postgres_data:
  mongo_data: