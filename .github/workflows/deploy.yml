# name: Deploy

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   deploy:
#     name: Deploy to VPS
#     runs-on: ubuntu-latest

#     steps:
#     - name: Install SSH keys
#       run: |
#         install -m 600 -D /dev/null ~/.ssh/github_actions
#         echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/github_actions
#         ssh-keyscan -H ${{ secrets.VPS_SSH_HOST }} > ~/.ssh/known_hosts

#     - name: Connect to server
#       run: ssh ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} "echo 'Connected successfully'"

#     - name: Pull latest changes
#       run: ssh ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} << 'EOF'
#         cd ${{ secrets.WORK_DIR }}
#         git checkout ${{ secrets.MAIN_BRANCH }}
#         git pull
#         EOF

#     - name: Build Docker image
#       run: ssh ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} << 'EOF'
#         cd ${{ secrets.WORK_DIR }}
#         docker build -t my_app .
#         EOF

#     - name: Stop and remove old container
#       run: ssh ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} << 'EOF'
#         docker stop my_app || true
#         docker rm my_app || true
#         EOF

#     - name: Run new Docker container
#       run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
#         docker run -d --name my_app -p 80:80 my_app
#         EOF

#     - name: Cleanup
#       run: rm -rf ~/.ssh